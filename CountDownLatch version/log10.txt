PROGRAM EXECUTION START ---------------------------------------------------------------

@ Program state ID: 1
------------------
@ Execution stack: 
(Ref(int) v1; (Ref(int) v2; (Ref(int) v3; (int cnt; (fork((new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork(wH(v2, rH(v2)*10)); (print(rH(v2)); (fork(wH(v3, rH(v3)*10)); (print(rH(v2)); countDown(cnt)))))))))); (await(cnt); (print(10); (countDown(cnt); print(100)))))))))
---------------
@ Symbol table: 
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
Ref(int) v1
(Ref(int) v2; (Ref(int) v3; (int cnt; (fork((new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork(wH(v2, rH(v2)*10)); (print(rH(v2)); (fork(wH(v3, rH(v3)*10)); (print(rH(v2)); countDown(cnt)))))))))); (await(cnt); (print(10); (countDown(cnt); print(100))))))))
---------------
@ Symbol table: 
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(Ref(int) v2; (Ref(int) v3; (int cnt; (fork((new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork(wH(v2, rH(v2)*10)); (print(rH(v2)); (fork(wH(v3, rH(v3)*10)); (print(rH(v2)); countDown(cnt)))))))))); (await(cnt); (print(10); (countDown(cnt); print(100))))))))
---------------
@ Symbol table: 
v1 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
Ref(int) v2
(Ref(int) v3; (int cnt; (fork((new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork(wH(v2, rH(v2)*10)); (print(rH(v2)); (fork(wH(v3, rH(v3)*10)); (print(rH(v2)); countDown(cnt)))))))))); (await(cnt); (print(10); (countDown(cnt); print(100)))))))
---------------
@ Symbol table: 
v1 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(Ref(int) v3; (int cnt; (fork((new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork(wH(v2, rH(v2)*10)); (print(rH(v2)); (fork(wH(v3, rH(v3)*10)); (print(rH(v2)); countDown(cnt)))))))))); (await(cnt); (print(10); (countDown(cnt); print(100)))))))
---------------
@ Symbol table: 
v1 --> (0,int)
v2 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
Ref(int) v3
(int cnt; (fork((new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork(wH(v2, rH(v2)*10)); (print(rH(v2)); (fork(wH(v3, rH(v3)*10)); (print(rH(v2)); countDown(cnt)))))))))); (await(cnt); (print(10); (countDown(cnt); print(100))))))
---------------
@ Symbol table: 
v1 --> (0,int)
v2 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(int cnt; (fork((new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork(wH(v2, rH(v2)*10)); (print(rH(v2)); (fork(wH(v3, rH(v3)*10)); (print(rH(v2)); countDown(cnt)))))))))); (await(cnt); (print(10); (countDown(cnt); print(100))))))
---------------
@ Symbol table: 
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
int cnt
(fork((new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork(wH(v2, rH(v2)*10)); (print(rH(v2)); (fork(wH(v3, rH(v3)*10)); (print(rH(v2)); countDown(cnt)))))))))); (await(cnt); (print(10); (countDown(cnt); print(100)))))
---------------
@ Symbol table: 
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(fork((new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork(wH(v2, rH(v2)*10)); (print(rH(v2)); (fork(wH(v3, rH(v3)*10)); (print(rH(v2)); countDown(cnt)))))))))); (await(cnt); (print(10); (countDown(cnt); print(100)))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
fork((new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork(wH(v2, rH(v2)*10)); (print(rH(v2)); (fork(wH(v3, rH(v3)*10)); (print(rH(v2)); countDown(cnt))))))))))
(await(cnt); (print(10); (countDown(cnt); print(100))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(await(cnt); (print(10); (countDown(cnt); print(100))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 2
------------------
@ Execution stack: 
(new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork(wH(v2, rH(v2)*10)); (print(rH(v2)); (fork(wH(v3, rH(v3)*10)); (print(rH(v2)); countDown(cnt)))))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(10); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 2
------------------
@ Execution stack: 
new(v1,2)
(new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork(wH(v2, rH(v2)*10)); (print(rH(v2)); (fork(wH(v3, rH(v3)*10)); (print(rH(v2)); countDown(cnt))))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


PROGRAM EXECUTION START ---------------------------------------------------------------

@ Program state ID: 1
------------------
@ Execution stack: 
(Ref(int) v1; (Ref(int) v2; (Ref(int) v3; (int cnt; (new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))))
---------------
@ Symbol table: 
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
Ref(int) v1
(Ref(int) v2; (Ref(int) v3; (int cnt; (new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))
---------------
@ Symbol table: 
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(Ref(int) v2; (Ref(int) v3; (int cnt; (new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))
---------------
@ Symbol table: 
v1 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
Ref(int) v2
(Ref(int) v3; (int cnt; (new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))
---------------
@ Symbol table: 
v1 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(Ref(int) v3; (int cnt; (new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))
---------------
@ Symbol table: 
v1 --> (0,int)
v2 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
Ref(int) v3
(int cnt; (new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))
---------------
@ Symbol table: 
v1 --> (0,int)
v2 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(int cnt; (new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))
---------------
@ Symbol table: 
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
int cnt
(new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))
---------------
@ Symbol table: 
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
new(v1,2)
(new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (1,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
new(v2,3)
(new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (1,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (1,int)
v2 --> (2,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
new(v3,4)
(newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (1,int)
v2 --> (2,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
newLatch(cnt,rH(v2))
(fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))))))))))
(await(cnt); (print(100); (countDown(cnt); print(100))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
(await(cnt); (print(100); (countDown(cnt); print(100))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 2
------------------
@ Execution stack: 
(wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 2
------------------
@ Execution stack: 
wH(v1, rH(v1)*10)
(print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 2
------------------
@ Execution stack: 
(print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 2
------------------
@ Execution stack: 
print(rH(v1))
(countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 2
------------------
@ Execution stack: 
(countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 2
------------------
@ Execution stack: 
countDown(cnt)
fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 2
------------------
@ Execution stack: 
fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 2
------------------
@ Execution stack: 
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 3
------------------
@ Execution stack: 
(wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 3
------------------
@ Execution stack: 
wH(v2, rH(v2)*10)
(print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 3
------------------
@ Execution stack: 
(print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 3
------------------
@ Execution stack: 
print(rH(v2))
(countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 3
------------------
@ Execution stack: 
(countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 3
------------------
@ Execution stack: 
countDown(cnt)
fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 3
------------------
@ Execution stack: 
fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 3
------------------
@ Execution stack: 
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 4
------------------
@ Execution stack: 
(wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 4
------------------
@ Execution stack: 
wH(v3, rH(v3)*10)
(print(rH(v3)); countDown(cnt))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 4
------------------
@ Execution stack: 
(print(rH(v3)); countDown(cnt))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 4
------------------
@ Execution stack: 
print(rH(v3))
countDown(cnt)
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 4
------------------
@ Execution stack: 
countDown(cnt)
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


@ Program state ID: 4
------------------
@ Execution stack: 
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


@ Program state ID: 1
------------------
@ Execution stack: 
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


@ Program state ID: 1
------------------
@ Execution stack: 
print(100)
(countDown(cnt); print(100))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


@ Program state ID: 1
------------------
@ Execution stack: 
(countDown(cnt); print(100))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
100
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


@ Program state ID: 1
------------------
@ Execution stack: 
countDown(cnt)
print(100)
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
100
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


@ Program state ID: 1
------------------
@ Execution stack: 
print(100)
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
100
1
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


@ Program state ID: 1
------------------
@ Execution stack: 
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
100
1
100
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


PROGRAM EXECUTION START ---------------------------------------------------------------

@ Program state ID: 1
------------------
@ Execution stack: 
(Ref(int) v1; (Ref(int) v2; (Ref(int) v3; (int cnt; (new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))))
---------------
@ Symbol table: 
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
Ref(int) v1
(Ref(int) v2; (Ref(int) v3; (int cnt; (new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))
---------------
@ Symbol table: 
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(Ref(int) v2; (Ref(int) v3; (int cnt; (new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))))
---------------
@ Symbol table: 
v1 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
Ref(int) v2
(Ref(int) v3; (int cnt; (new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))
---------------
@ Symbol table: 
v1 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(Ref(int) v3; (int cnt; (new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))))
---------------
@ Symbol table: 
v1 --> (0,int)
v2 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
Ref(int) v3
(int cnt; (new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))
---------------
@ Symbol table: 
v1 --> (0,int)
v2 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(int cnt; (new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))))
---------------
@ Symbol table: 
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
int cnt
(new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))
---------------
@ Symbol table: 
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(new(v1,2); (new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
new(v1,2)
(new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (0,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(new(v2,3); (new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (1,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
new(v2,3)
(new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (1,int)
v2 --> (0,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(new(v3,4); (newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (1,int)
v2 --> (2,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
new(v3,4)
(newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (1,int)
v2 --> (2,int)
v3 --> (0,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(newLatch(cnt,rH(v2)); (fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100))))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
newLatch(cnt,rH(v2))
(fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))
---------------
@ Symbol table: 
cnt --> 0
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:


@ Program state ID: 1
------------------
@ Execution stack: 
(fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))); (await(cnt); (print(100); (countDown(cnt); print(100)))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
fork((wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))))))))))
(await(cnt); (print(100); (countDown(cnt); print(100))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
(await(cnt); (print(100); (countDown(cnt); print(100))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 2
------------------
@ Execution stack: 
(wH(v1, rH(v1)*10); (print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 2
------------------
@ Execution stack: 
wH(v1, rH(v1)*10)
(print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 2
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 2
------------------
@ Execution stack: 
(print(rH(v1)); (countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 2
------------------
@ Execution stack: 
print(rH(v1))
(countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 2
------------------
@ Execution stack: 
(countDown(cnt); fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 2
------------------
@ Execution stack: 
countDown(cnt)
fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 3


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 2
------------------
@ Execution stack: 
fork((wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 2
------------------
@ Execution stack: 
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 3
------------------
@ Execution stack: 
(wH(v2, rH(v2)*10); (print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 3
------------------
@ Execution stack: 
wH(v2, rH(v2)*10)
(print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 3
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 3
------------------
@ Execution stack: 
(print(rH(v2)); (countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 3
------------------
@ Execution stack: 
print(rH(v2))
(countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 3
------------------
@ Execution stack: 
(countDown(cnt); fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 3
------------------
@ Execution stack: 
countDown(cnt)
fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 2


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 3
------------------
@ Execution stack: 
fork((wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt))))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 3
------------------
@ Execution stack: 
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 4
------------------
@ Execution stack: 
(wH(v3, rH(v3)*10); (print(rH(v3)); countDown(cnt)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 4
------------------
@ Execution stack: 
wH(v3, rH(v3)*10)
(print(rH(v3)); countDown(cnt))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 4
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 4
------------------
@ Execution stack: 
(print(rH(v3)); countDown(cnt))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 4
------------------
@ Execution stack: 
print(rH(v3))
countDown(cnt)
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 4
------------------
@ Execution stack: 
countDown(cnt)
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 1


@ Program state ID: 1
------------------
@ Execution stack: 
await(cnt)
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


@ Program state ID: 4
------------------
@ Execution stack: 
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


@ Program state ID: 1
------------------
@ Execution stack: 
(print(100); (countDown(cnt); print(100)))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


@ Program state ID: 1
------------------
@ Execution stack: 
print(100)
(countDown(cnt); print(100))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


@ Program state ID: 1
------------------
@ Execution stack: 
(countDown(cnt); print(100))
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
100
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


@ Program state ID: 1
------------------
@ Execution stack: 
countDown(cnt)
print(100)
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
100
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


@ Program state ID: 1
------------------
@ Execution stack: 
print(100)
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
100
1
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


@ Program state ID: 1
------------------
@ Execution stack: 
---------------
@ Symbol table: 
cnt --> 1
v1 --> (1,int)
v2 --> (2,int)
v3 --> (3,int)
----------------
@ Output stream: 
20
2
30
3
40
4
100
1
100
-------------
@ File table: 
-------
@ Heap:
1 --> 20
2 --> 30
3 --> 40
----------------
@ LatchTable:
1 --> 0


